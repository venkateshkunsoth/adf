{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "salesdata",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_ouput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_ouput",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "ds_ouput",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\tTransaction_date as string,\n\t\tProduct as string,\n\t\tPrice as string,\n\t\tPayment_Type as string,\n\t\tName as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tCountry as string,\n\t\tAccount_Created as string,\n\t\tLast_Login as string,\n\t\tLatitude as string,\n\t\tLongitude as string,\n\t\t{US Zip} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tpartitionBy('hash', 1)) ~> source1\nsource1 split(Price=='1200',\n\tPrice=='3600',\n\tdisjoint: false) ~> ConditionalSplit1@(priceis, price, outputnotmatching)\nConditionalSplit1@priceis sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['1200output'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink1\nConditionalSplit1@price sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['3600file'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2\nConditionalSplit1@outputnotmatching sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['other'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink3"
		}
	}
}