{
	"name": "exitsdontexists",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "scd1",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "scd2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_ouput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_ouput",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "Exists1"
				},
				{
					"name": "Exists2"
				}
			],
			"script": "source(output(\n\t\tid as string,\n\t\tname as string,\n\t\tCITY as string,\n\t\tLAPTOP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tid as string,\n\t\tlocation as string,\n\t\tsalary as string,\n\t\tDepartment as string,\n\t\tCompany as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 exists(source1@id == source2@id,\n\tnegate:false,\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Exists1\nsource2, source1 exists(source2@id == source1@id,\n\tnegate:true,\n\tpartitionBy('hash', 1),\n\tbroadcast: 'auto')~> Exists2\nExists1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['exists output'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tid,\n\t\tname,\n\t\tCITY,\n\t\tLAPTOP\n\t),\n\tpartitionBy('hash', 1)) ~> sink1\nExists2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['donot exists output'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sink2"
		}
	}
}